#!/usr/bin/env python3
import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "..")))

import pandas as pd
from my_project.common.logger import logger
from my_project.utils.db_connector import get_db_engine
from my_project.data_processing.indicators import calculate_ta_indicators_by_symbol, save_to_db

def integrate_data():
    logger.info("üîÑ Piaci adatok integr√°l√°sa elkezd≈ëd√∂tt.")

    try:
        engine = get_db_engine()
        # A query-ben √°tnevezz√ºk az oszlopokat
        query = """
        SELECT 
            timestamp,
            symbol,
            price AS close, 
            open_price AS open,
            high,
            low,
            volume
        FROM market_data
        """
        df_market = pd.read_sql(query, engine)
        logger.info("‚úÖ Piaci adatok sikeresen bet√∂ltve az adatb√°zisb√≥l.")
    except Exception as e:
        logger.error(f"‚ùå Hiba a piaci adatok bet√∂lt√©s√©n√©l: {e}")
        return

    if df_market.empty:
        logger.error("‚ùå A 'market_data' t√°bla √ºres, nincs mit feldolgozni.")
        return

    # Megh√≠vjuk a szimb√≥lumonk√©nti indik√°tor-sz√°m√≠t√°st
    try:
        df_with_indicators = calculate_ta_indicators_by_symbol(df_market)
    except Exception as e:
        logger.error(f"‚ùå Hiba az indik√°torok sz√°m√≠t√°s√°n√°l: {e}")
        return

    # Az indik√°torokat mentj√ºk a technical_indicators t√°bl√°ba
    try:
        save_to_db(df_with_indicators)
    except Exception as e:
        logger.error(f"‚ùå Hiba az eredm√©nyek ment√©s√©n√©l: {e}")
        return

    logger.info("‚úÖ Adatintegr√°ci√≥ sikeresen befejezve.")

if __name__ == "__main__":
    integrate_data()
